#!/bin/bash

# Get the absolute path to the project root
SCRIPT_PATH="$(readlink -f "$0")"
SCRIPT_DIR="$(dirname "$SCRIPT_PATH")"
PROJECT_ROOT="$(dirname "$SCRIPT_DIR")"

# Ensure Python path includes project directory
export PYTHONPATH="$PROJECT_ROOT:$PYTHONPATH"

# Function to show usage
show_usage() {
    echo "Letta Server Monitor"
    echo "Usage: letta-monitor [command]"
    echo ""
    echo "Commands:"
    echo "  status       Check server status with AI diagnostics"
    echo "  logs        View recent monitoring logs"
    echo "  repair      Run status check and attempt repairs"
    echo "  start       Start monitoring service"
    echo "  stop        Stop monitoring service"
    echo "  help        Show this help message"
    echo ""
    echo "Examples:"
    echo "  letta-monitor status    # Check server status"
    echo "  letta-monitor logs      # View recent logs"
}

# Function to view logs
view_logs() {
    echo "=== Letta Monitor Logs ==="
    echo "Main Log:"
    echo "-------------------"
    tail -n 50 ~/Library/Logs/letta-monitor.log
    
    echo -e "\nError Log:"
    echo "-------------------"
    tail -n 20 ~/Library/Logs/letta-monitor.stderr.log
}

# Process commands
case "$1" in
    "status")
        python3 "$SCRIPT_DIR/check_letta_status.py"
        ;;
    "logs")
        view_logs
        ;;
    "repair")
        FORCE_REPAIR=1 python3 "$SCRIPT_DIR/check_letta_status.py"
        ;;
    "start")
        launchctl load ~/Library/LaunchAgents/com.letta.monitor.plist
        echo "✅ Monitoring service started"
        ;;
    "stop")
        launchctl unload ~/Library/LaunchAgents/com.letta.monitor.plist
        echo "✅ Monitoring service stopped"
        ;;
    "help"|"")
        show_usage
        ;;
    *)
        echo "❌ Unknown command: $1"
        echo ""
        show_usage
        exit 1
        ;;
esac
